/*
Write a program that reads three integer numbers N, K and S and an array of N elements from the console. 
Find in the array a subset of K elements that have sum S or indicate about its absence.
*/
using System;

class SubsetSumNKS
{
    static void Main()
    {
        Console.Write("Enter N= ");
        int N = int.Parse(Console.ReadLine());
        int maxI = (int)Math.Pow(2, N);
        int[] array = new int[N];
        for (int i = 0; i < N; i++)
        {
            array[i] = int.Parse(Console.ReadLine());
        }
        Console.Write("Enter K= ");
        int K = int.Parse(Console.ReadLine());
        Console.Write("Enter S= ");
        int S = int.Parse(Console.ReadLine());
        for (int i = 0; i < N; i++)
        {
            array[i] = int.Parse(Console.ReadLine());
        }
        string subset = "";
        for (int i = 1; i < maxI; i++)
        {
            subset= "";
            int currentSum = 0;
            int BrLength = 0;
            for (int j = 0; j <= N; j++)
            {
                int mask = 1 << j;
                int nAndMask = i & mask;
                int bit = nAndMask >> j;
                if (bit == 1)
                {
                    currentSum = currentSum + array[j];
                    subset = subset + " " + array[j];
                    BrLength++;
                }
            }
            if (currentSum == S && BrLength == K)
            {
                Console.WriteLine("The subset has a sum of {0} : ({1}) ", S, subset);
            }
        }
    }
}
